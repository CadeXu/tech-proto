{"version":3,"sources":["components/Menu.tsx","pages/IoTDashboard.tsx","pages/SmartLogistic.tsx","pages/ThermalVideo.tsx","App.tsx","serviceWorker.ts","index.tsx","../node_modules/@ionic/core/dist/esm-es5 lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object"],"names":["appPages","title","url","imgSrc","Menu","location","useLocation","contentId","type","class","id","src","map","appPage","index","key","autoHide","className","pathname","routerLink","routerDirection","lines","detail","slot","color","IoTDashboard","props","state","senMsg","senDev","setInterval","myFresh","console","log","a","fetch","method","statusRes","msgRes","json","myStatus","myMsg","setState","f","this","data","msg","size","st","idx","device_uuid","status","timeStamp","React","Component","SensorData","style","textAlign","recordID","paddingLeft","sensor1","sensor2","sensor3","sensor4","sensor5","sensor6","sensor7","sensor8","sensor9","paddingRight","sensor10","SmartLogistic","ThermalVideo","Date","toISOString","fixed","width","height","controls","App","path","component","IoT","exact","Samrt","Thermal","from","to","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","e","Error","code","ids","keys","Object","module","exports"],"mappings":"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","file":"static/js/main.127417d6.chunk.js","sourcesContent":["import {\n  IonContent,\n  IonItem,\n  IonList,\n  IonListHeader,\n  IonMenu,\n  IonMenuToggle,\n  IonImg,\n  IonText,\n} from '@ionic/react';\n\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\n// import { desktop, desktopOutline, videocam, videocamOutline, home, homeOutline} from 'ionicons/icons';\n// import { type } from 'os';\nimport './Menu.css';\n\ninterface AppPage {\n  url: string;\n  imgSrc: string;\n  // iosIcon: string;\n  // mdIcon: string;\n  title: string;\n}\n\nconst appPages: AppPage[] = [\n  {\n    title: 'Smart Sanitation',\n    url: '/SmartLogistic',\n    imgSrc: '/assets/icon/favicon.png'\n  },\n  {\n    title: 'Thermal Video',\n    url: '/ThermalVideo',\n    imgSrc: '/assets/imgs/video.png',\n  },\n  {\n    title: 'IoT Dashboard',\n    url: '/IoTDashboard',\n    imgSrc: '/assets/imgs/dashboard.png',\n  },\n  // {\n  //   title: 'Archived',\n  //   url: '/page/Archived',\n  //   iosIcon: archiveOutline,\n  //   mdIcon: archiveSharp\n  // },\n  // {\n  //   title: 'Trash',\n  //   url: '/page/Trash',\n  //   iosIcon: trashOutline,\n  //   mdIcon: trashSharp\n  // },\n  // {\n  //   title: 'Spam',\n  //   url: '/page/Spam',\n  //   iosIcon: warningOutline,\n  //   mdIcon: warningSharp\n  // }\n];\n\n// const labels = ['Family', 'Friends', 'Notes', 'Work', 'Travel', 'Reminders'];\n\nconst Menu: React.FC = () => {\n  const location = useLocation();\n\n  return (\n    <IonMenu contentId=\"main\" type=\"overlay\">\n      <IonContent class=\"ionContent\">\n        <IonList id=\"inbox-list\" class=\"ionList\">\n          <IonListHeader>\n            <IonImg src=\"./assets/imgs/logo.png\" class=\"logImg\"/>\n          </IonListHeader>\n          {/* <IonNote>xxxxx.xxx@sioux.asia</IonNote> */}\n          {appPages.map((appPage, index) => {\n            return (\n              <IonMenuToggle key={index} autoHide={false}>\n                <IonItem class=\"ionItem\" className={location.pathname === appPage.url ? 'selected' : ''} routerLink={appPage.url} routerDirection=\"none\" lines=\"none\" detail={false}>\n                  {/* <IonChip class=\"chipMenu\"/> */}\n                  {/* <IonIcon slot=\"start\" ios={appPage.imgSrc} md={appPage.mdIcon} class=\"iconMenu\"/> */}\n                  <IonImg slot=\"start\" src={appPage.imgSrc} class=\"iconMenu\"/>\n                  <IonText color=\"light\" class=\"menuText\">{appPage.title}</IonText>\n                </IonItem>\n              </IonMenuToggle>\n            );\n          })}\n        </IonList>\n\n        {/* <IonList id=\"labels-list\">\n          <IonListHeader>Labels</IonListHeader>\n          {labels.map((label, index) => (\n            <IonItem lines=\"none\" key={index}>\n              <IonIcon slot=\"start\" icon={bookmarkOutline} />\n              <IonLabel>{label}</IonLabel>\n            </IonItem>\n          ))}\n        </IonList> */}\n      </IonContent>\n    </IonMenu>\n  );\n};\n\nexport default Menu;\n","import React from 'react';\r\nimport {\r\n  IonItem,\r\n  IonButtons,\r\n  IonContent,\r\n  IonHeader,\r\n  IonMenuButton,\r\n  IonPage,\r\n  IonTitle,\r\n  IonToolbar,\r\n  IonRow,\r\n  IonCol,\r\n  IonList,\r\n  IonIcon\r\n} from '@ionic/react';\r\nimport { radioButtonOn } from 'ionicons/icons'\r\n// import ExploreContainer from '../components/ExploreContainer';\r\nimport './IoTDashboard.css';\r\n\r\n// const senMsg: Msg[]= [\r\n//   {\r\n//     id: \"254546545\",\r\n//     timeStamp: \"2020-09-30T07:23:50.132Z\",\r\n//     sensor1: \"0\",\r\n//     sensor2: \"1\",\r\n//     sensor3: \"1\",\r\n//     sensor4: \"0\",\r\n//     sensor5: \"0\",\r\n//     sensor6: \"0\",\r\n//     sensor7: \"1\",\r\n//     sensor8: \"0\",\r\n//     sensor9: \"1\",\r\n//     sensor10: \"1\"\r\n//   },\r\n//   {\r\n//     id: \"254546545\",\r\n//     timeStamp: \"2020-09-30T07:23:50.132Z\",\r\n//     sensor1: \"0\",\r\n//     sensor2: \"1\",\r\n//     sensor3: \"1\",\r\n//     sensor4: \"0\",\r\n//     sensor5: \"0\",\r\n//     sensor6: \"0\",\r\n//     sensor7: \"1\",\r\n//     sensor8: \"0\",\r\n//     sensor9: \"1\",\r\n//     sensor10: \"1\"\r\n//   }\r\n// ];\r\n\r\n// const senDev = [\r\n//   {\r\n//     deviceId: \"123413123\",\r\n//     status: \"1\",\r\n//     time: \"2020-09-30T07:23:50.132Z\"\r\n//   },\r\n//   {\r\n//     deviceId: \"123413123\",\r\n//     status: \"0\",\r\n//     time: \"2020-09-30T07:23:50.132Z\"\r\n//   }\r\n// ];\r\n\r\ninterface Msg {\r\n  recordID: string;\r\n  timeStamp: string;\r\n  sensor1: string;\r\n  sensor2: string;\r\n  sensor3: string;\r\n  sensor4: string;\r\n  sensor5: string;\r\n  sensor6: string;\r\n  sensor7: string;\r\n  sensor8: string;\r\n  sensor9: string;\r\n  sensor10: string;\r\n}\r\n\r\ninterface Dev {\r\n  device_uuid: string;\r\n  timeStamp: string;\r\n  status: number;\r\n}\r\n\r\ninterface sDataState {\r\n  senMsg: Msg[];\r\n  senDev: Dev[];\r\n}\r\n\r\ninterface Props {\r\n  //\r\n}\r\n\r\n\r\n// function doRefresh(event: CustomEvent){\r\n//   console.log(\"Begin async operation\");\r\n\r\n//   setTimeout(() => {\r\n//     console.log(\"Async operation has ended\");\r\n//     event.detail.complete();\r\n//   },2000);\r\n// }\r\n\r\n// function doInfinite($event: CustomEvent<void>){\r\n//   console.log(\"Begin async operation\");\r\n\r\n//   setTimeout(() => {\r\n//     console.log(\"Async operation has ended\");\r\n//     ($event.target as HTMLIonInfiniteScrollElement).complete();\r\n//   },2000);\r\n// }\r\n\r\nclass IoTDashboard extends React.Component<Props, sDataState>{\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      senMsg: [],\r\n      senDev: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    setInterval(\r\n      () => this.myFresh(),\r\n      5000\r\n    );\r\n  }\r\n\r\n  // componentWillUnmount(){\r\n  //     clearInterval(this.);\r\n  // }\r\n\r\n  myFresh() {\r\n    console.log(\"Hello\");\r\n\r\n    const f = async () => {\r\n      const statusRes = await fetch('http://10.86.12.127:5000/api/DeviceStatus', {\r\n        method: 'GET',\r\n        // headers: {\r\n        //   \"Content-Type\":\"application/json; charset=utf-8\"\r\n        // },\r\n        // mode: 'no-cors'\r\n        // cache: 'default'\r\n      });\r\n      const msgRes = await fetch('http://10.86.12.127:5000/api/Devicemessage', {\r\n        method: 'Get',\r\n      });\r\n\r\n      // console.log(result);\r\n      // console.log(result.json());\r\n      const myStatus = await statusRes.json();\r\n      const myMsg = await msgRes.json();\r\n      console.log(\"myMsg: \"+ myMsg);\r\n\r\n      this.setState({\r\n        senDev: myStatus,\r\n        senMsg: myMsg\r\n      });\r\n    };\r\n    f();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <IonPage>\r\n        <IonHeader>\r\n          <IonToolbar>\r\n            <IonButtons slot=\"start\">\r\n              <IonMenuButton />\r\n            </IonButtons>\r\n            <IonTitle class=\"iotTitle\">IoT Dashboard</IonTitle>\r\n          </IonToolbar>\r\n        </IonHeader>\r\n\r\n        <IonContent>\r\n          {/* <IonRefresher slot=\"fixed\" onIonRefresh={doRefresh}>\r\n          <IonRefresherContent\r\n            // pullingIcon={chevronDownCircleOutline}\r\n            pullingText=\"Pull to refresh\"\r\n            refreshingSpinner=\"circles\"\r\n            refreshingText=\"Refreshing...\">\r\n          </IonRefresherContent>\r\n        </IonRefresher> */}\r\n\r\n          <IonRow>\r\n            {/* <meta http-equiv=\"refresh\" content=\"1\"></meta> */}\r\n            <IonCol>\r\n              <IonItem>\r\n                <IonTitle>Data information</IonTitle>\r\n              </IonItem>\r\n              <IonItem>\r\n                <IonCol class=\"tbHead\">DEVICEID</IonCol>\r\n                <IonCol class=\"tbHead\">TIME</IonCol>\r\n                <IonCol class=\"tbHead\">S_1</IonCol>\r\n                <IonCol class=\"tbHead\">S_2</IonCol>\r\n                <IonCol class=\"tbHead\">S_3</IonCol>\r\n                <IonCol class=\"tbHead\">S_4</IonCol>\r\n                <IonCol class=\"tbHead\">S_5</IonCol>\r\n                <IonCol class=\"tbHead\">S_6</IonCol>\r\n                <IonCol class=\"tbHead\">S_7</IonCol>\r\n                <IonCol class=\"tbHead\">S_8</IonCol>\r\n                <IonCol class=\"tbHead\">S_9</IonCol>\r\n                <IonCol class=\"tbHead\">S_10</IonCol>\r\n              </IonItem>\r\n              <IonList>\r\n                {this.state.senMsg.map((data, index) => (\r\n                  <SensorData key={index} msg={data} />\r\n                ))}\r\n              </IonList>\r\n            </IonCol>\r\n\r\n            <IonCol size=\"2.8\">\r\n              <IonItem>\r\n                <IonTitle>Device State</IonTitle>\r\n              </IonItem>\r\n              <IonItem>\r\n                <IonCol class=\"tbHead\">DEVICEID</IonCol>\r\n                <IonCol class=\"tbHead\">STATUS</IonCol>\r\n                <IonCol class=\"tbHead\">TIME</IonCol>\r\n              </IonItem>\r\n              <IonList>\r\n                {this.state.senDev.map((st, idx) => (\r\n                  <IonItem key={idx} class=\"statusItem\">\r\n                    <IonCol class=\"myCol\">{st.device_uuid}</IonCol>\r\n                    <IonCol class=\"myCol\">\r\n                      {/* {st.status === 1 ? <IonIcon md={radioButtonOn} class=\"statusOn\" /> : <IonIcon md={radioButtonOn} class=\"statusOff\" />} */}\r\n                      {st.status === 1 ? <i className=\"statusOn\" />: <i className=\"statusOff\" />}\r\n                    </IonCol>\r\n                    <IonCol size=\"6\" class=\"myCol\">{st.timeStamp}</IonCol>\r\n                  </IonItem>\r\n                ))}\r\n              </IonList>\r\n            </IonCol>\r\n          </IonRow>\r\n\r\n          {/* <IonInfiniteScroll threshold=\"100px\" onIonInfinite={doInfinite}>\r\n          <IonInfiniteScrollContent\r\n            loadingSpinner=\"bubbles\"\r\n            loadingText=\"Loading more data…\"\r\n          ></IonInfiniteScrollContent>\r\n        </IonInfiniteScroll> */}\r\n\r\n        </IonContent>\r\n      </IonPage>\r\n    );\r\n  }\r\n};\r\n\r\n\r\n// const IoTDashboard: React.FC = () => {\r\n\r\n//   // const { name } = useParams<{ name: string; }>();\r\n\r\n//   const [msgData, setMsgData] = useState<Msg[]>([]);\r\n//   const [statusData, setStatus] = useState<Dev[]>([]);\r\n\r\n\r\n//   useIonViewWillEnter(async () => {    \r\n//     const statusRes = await fetch('http://10.86.12.66:5000/api/DeviceStatus',\r\n//     {\r\n//         method: 'GET',\r\n//         // headers: {\r\n//         //   \"Content-Type\":\"application/json; charset=utf-8\"\r\n//         // },\r\n//         // mode: 'no-cors'\r\n//         // cache: 'default' \r\n//     }\r\n//     );\r\n//     const msgRes = await fetch('http://10.86.12.66:5000/api/Devicemessage',\r\n//         {\r\n//         method: 'Get',\r\n//         // headers: {\r\n//         //   \"Content-Type\":\"application/json; charset=utf-8\"\r\n//         // }\r\n//         }\r\n//     );\r\n\r\n//     // console.log(result);\r\n//     // console.log(result.json());\r\n//     const myStatus = await statusRes.json();\r\n//     const myMsg = await msgRes.json();\r\n\r\n\r\n//   // console.log(myMsg[0].data);\r\n//   //   console.log(JSON.parse(myMsg[0].data+\"]\"));\r\n//     setStatus(myStatus);\r\n//     setMsgData(myMsg);\r\n//   });\r\n\r\n//   return (\r\n//     <IonPage>\r\n//       <IonHeader>\r\n//         <IonToolbar>\r\n//           <IonButtons slot=\"start\">\r\n//             <IonMenuButton />\r\n//           </IonButtons>\r\n//           <IonTitle class=\"iotTitle\">IoT Dashboard</IonTitle>\r\n//         </IonToolbar>\r\n//       </IonHeader>\r\n\r\n//       <IonContent>\r\n//       {/* <IonRefresher slot=\"fixed\" onIonRefresh={doRefresh}>\r\n//         <IonRefresherContent\r\n//           // pullingIcon={chevronDownCircleOutline}\r\n//           pullingText=\"Pull to refresh\"\r\n//           refreshingSpinner=\"circles\"\r\n//           refreshingText=\"Refreshing...\">\r\n//         </IonRefresherContent>\r\n//       </IonRefresher> */}\r\n\r\n//       <IonRow>\r\n//         {/* <meta http-equiv=\"refresh\" content=\"1\"></meta> */}\r\n//         <IonCol>\r\n//           <IonItem>\r\n//             <IonTitle>Data information</IonTitle>\r\n//           </IonItem>\r\n//           <IonItem>\r\n//               <IonCol class=\"tbHead\">DEVICEID</IonCol>\r\n//               <IonCol class=\"tbHead\">TIME</IonCol>\r\n//               <IonCol class=\"tbHead\">S_1</IonCol>\r\n//               <IonCol class=\"tbHead\">S_2</IonCol>\r\n//               <IonCol class=\"tbHead\">S_3</IonCol>\r\n//               <IonCol class=\"tbHead\">S_4</IonCol>\r\n//               <IonCol class=\"tbHead\">S_5</IonCol>\r\n//               <IonCol class=\"tbHead\">S_6</IonCol>\r\n//               <IonCol class=\"tbHead\">S_7</IonCol>\r\n//               <IonCol class=\"tbHead\">S_8</IonCol>\r\n//               <IonCol class=\"tbHead\">S_9</IonCol>\r\n//               <IonCol class=\"tbHead\">S_10</IonCol>\r\n//           </IonItem>\r\n//           <IonList>\r\n//             {msgData.map((data,index) => (\r\n//               <SensorData key={index} msg={data} />\r\n//             ))}\r\n//           </IonList>\r\n//         </IonCol>\r\n\r\n//         <IonCol size=\"2.8\">\r\n//           <IonItem>\r\n//             <IonTitle>Device State</IonTitle>\r\n//           </IonItem>\r\n//           <IonItem>\r\n//               <IonCol class=\"tbHead\">DEVICEID</IonCol>\r\n//               <IonCol class=\"tbHead\">STATUS</IonCol>\r\n//               <IonCol class=\"tbHead\">TIME</IonCol>\r\n//           </IonItem>\r\n//           <IonList>\r\n//             {statusData.map((state,idx) => (\r\n//               <IonItem key={idx} class=\"statusItem\">\r\n//                 <IonCol class=\"myCol\">{state.device_uuid}</IonCol>\r\n//                 <IonCol class=\"myCol\">\r\n//                   { state.status === 1 ? <IonIcon md={radioButtonOn} class=\"statusOn\"/> : <IonIcon md={radioButtonOn} class=\"statusOff\"/>}\r\n//                 </IonCol>\r\n//                 <IonCol size=\"6\" class=\"myCol\">{state.timeStamp}</IonCol>\r\n//               </IonItem>\r\n//             ))}\r\n//           </IonList>\r\n//         </IonCol>\r\n//       </IonRow>\r\n\r\n//       {/* <IonInfiniteScroll threshold=\"100px\" onIonInfinite={doInfinite}>\r\n//         <IonInfiniteScrollContent\r\n//           loadingSpinner=\"bubbles\"\r\n//           loadingText=\"Loading more data…\"\r\n//         ></IonInfiniteScrollContent>\r\n//       </IonInfiniteScroll> */}\r\n\r\n//       </IonContent>\r\n//     </IonPage>\r\n//   );\r\n// };\r\n\r\nconst SensorData: React.FC<{ msg: Msg }> = ({ msg }) => {\r\n  return (\r\n    <IonItem class=\"msgItem\">\r\n      <IonCol style={{ textAlign: \"left\" }} class=\"msgCol\">{msg.recordID}</IonCol>\r\n      <IonCol style={{ textAlign: \"left\", paddingLeft: \"1%\" }} class=\"timeCol\">{msg.timeStamp}</IonCol>\r\n      <IonCol>\r\n        {msg.sensor1 === \"1\" ? <i className=\"statusOn\" />: <i className=\"statusOff\" />}\r\n      </IonCol>\r\n      <IonCol>\r\n        {msg.sensor2 === \"1\" ? <i className=\"statusOn\" />: <i className=\"statusOff\" />}\r\n      </IonCol>\r\n      <IonCol>\r\n        {msg.sensor3 === \"1\" ? <i className=\"statusOn\" />: <i className=\"statusOff\" />}\r\n      </IonCol>\r\n      <IonCol>\r\n        {msg.sensor4 === \"1\" ? <i className=\"statusOn\" />: <i className=\"statusOff\" />}\r\n      </IonCol >\r\n      <IonCol>\r\n        {msg.sensor5 === \"1\" ? <i className=\"statusOn\" />: <i className=\"statusOff\" />}\r\n      </IonCol>\r\n      <IonCol>\r\n        {msg.sensor6 === \"1\" ? <i className=\"statusOn\" />: <i className=\"statusOff\" />}\r\n      </IonCol>\r\n      <IonCol>\r\n        {msg.sensor7 === \"1\" ? <i className=\"statusOn\" />: <i className=\"statusOff\" />}\r\n      </IonCol>\r\n      <IonCol>\r\n        {msg.sensor8 === \"1\" ? <i className=\"statusOn\" />: <i className=\"statusOff\" />}\r\n      </IonCol>\r\n      <IonCol>\r\n        {msg.sensor9 === \"1\" ? <i className=\"statusOn\" />: <i className=\"statusOff\" />}\r\n      </IonCol>\r\n      <IonCol style={{ textAlign: \"left\", paddingRight: \"3%\" }}>\r\n        {msg.sensor10 === \"1\" ? <i className=\"statusOn\" />: <i className=\"statusOff\" />}\r\n      </IonCol>\r\n    </IonItem>\r\n  );\r\n};\r\n\r\nexport default IoTDashboard;\r\n","import React from 'react';\r\nimport { IonChip, IonButtons, IonContent, IonHeader, IonMenuButton, IonPage, IonTitle, IonToolbar, IonImg } from '@ionic/react';\r\n// import { useParams } from 'react-router';\r\n// import ExploreContainer from '../components/ExploreContainer';\r\nimport './SmartLogistic.css';\r\n\r\nconst SmartLogistic: React.FC = () => {\r\n  // const { name } = useParams<{ name: string; }>();\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <IonToolbar>\r\n          <IonButtons slot=\"start\">\r\n            <IonMenuButton />\r\n          </IonButtons>\r\n          <IonTitle class=\"smartTitle\">\r\n            Smart Logistic Platform\r\n            <IonChip class=\"ionChip\">Demo</IonChip>\r\n          </IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n\r\n      <IonContent class=\"content\">\r\n          <IonImg src=\"./assets/imgs/smart.JPG\" class=\"smartImg\"/>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\n\r\nexport default SmartLogistic;\r\n","import React from 'react';\r\nimport { IonButtons, IonContent, IonHeader, IonMenuButton, IonPage, IonTitle, IonToolbar, IonRow, IonLabel, IonGrid, IonCol, IonChip, IonText, IonItem } from '@ionic/react';\r\n// import { useParams } from 'react-router';\r\n// import ExploreContainer from '../components/ExploreContainer';\r\nimport './ThermalVideo.css';\r\n\r\nconst ThermalVideo: React.FC = () => {\r\n\r\n  // const { name } = useParams<{ name: string; }>();\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader class=\"ionHerader\">\r\n        <IonToolbar>\r\n          <IonButtons slot=\"start\">\r\n            <IonMenuButton />\r\n          </IonButtons>\r\n            <IonTitle class=\"thermalTitle\">Sioux Cloud Project</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n\r\n      <IonContent>\r\n          <IonLabel class=\"lableVideoAna\">\r\n            Thermal Video Analyse\r\n            <IonChip class=\"ionChip\">Demo</IonChip>\r\n          </IonLabel><br /><br />\r\n\r\n          <IonLabel class=\"lableVideoCam\">Thermal Camera Video</IonLabel>\r\n          <IonLabel class=\"thermalTime\">Upload time: {new Date().toISOString()}</IonLabel>\r\n          <IonItem class=\"splitLine\"/>\r\n\r\n\r\n        <br/><br/><br/>\r\n        <IonGrid fixed>\r\n          <IonRow>\r\n            <IonCol class=\"ionText\">\r\n              <video id=\"anaVideo\" width=\"500\" height=\"380\" controls>\r\n                  <source id=\"anaVideoSrc\" src=\"./assets/videos/v001.mp4\" type=\"video/mp4\"/>\r\n              </video><br/><br/>\r\n              <IonText class=\"textStyle\">Original Video</IonText>\r\n            </IonCol>\r\n            <IonCol class=\"ionText\">\r\n              <video id=\"anaVideo\" width=\"500\" height=\"380\" controls>\r\n                  <source id=\"anaVideoSrc\" src=\"./assets/videos/v004.mp4\" type=\"video/mp4\"/>\r\n              </video><br/><br/>\r\n              <IonText class=\"textStyle\">Analysed Video</IonText>\r\n            </IonCol>\r\n          </IonRow>\r\n        </IonGrid>\r\n\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default ThermalVideo;\r\n","import Menu from './components/Menu';\n// import Page from './pages/Page';\nimport React from 'react';\nimport { IonApp, IonRouterOutlet, IonSplitPane } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport { Redirect, Route } from 'react-router-dom';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\nimport IoT from './pages/IoTDashboard';\nimport Samrt from './pages/SmartLogistic';\nimport Thermal from './pages/ThermalVideo';\n\nconst App: React.FC = () => {\n  return (\n    <IonApp>\n      <IonReactRouter>\n        <IonSplitPane contentId=\"main\" class=\"isp\">\n          <Menu />\n          <IonRouterOutlet id=\"main\">\n            <Route path=\"/IoTDashboard\" component={IoT} exact={true} />\n            <Route path=\"/SmartLogistic\" component={Samrt} exact={true} />\n            <Route path=\"/ThermalVideo\" component={Thermal} exact={true} />\n            {/* <Route path=\"/page/:name\" component={Page} exact /> */}\n            <Redirect from=\"/\" to=\"/IoTDashboard\" exact />\n          </IonRouterOutlet>\n        </IonSplitPane>\n      </IonReactRouter>\n    </IonApp>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// setInterval(() => {\n//     console.log(\"hello\");\n//     ReactDOM.render(<IoTDashboard />,document.getElementById('main'));\n//   },3000);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t110,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t111,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t112,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t113,\n\t\t18\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t114,\n\t\t19\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t115,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t116,\n\t\t20\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t117,\n\t\t21\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t118,\n\t\t22\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t119,\n\t\t23\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t120,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t121,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t122,\n\t\t24\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t123,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t124,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t125,\n\t\t25\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t126,\n\t\t26\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t127,\n\t\t27\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t128,\n\t\t28\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t129,\n\t\t29\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t130,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t131,\n\t\t15\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t132,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t133,\n\t\t30\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t134,\n\t\t31\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t135,\n\t\t32\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t136,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t137,\n\t\t17\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t138,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t139,\n\t\t33\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t140,\n\t\t34\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t141,\n\t\t35\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t142,\n\t\t36\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t143,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t144,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t145,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t146,\n\t\t37\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t147,\n\t\t16\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t148,\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t149,\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t150,\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t151,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t152,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 66;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t156,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 88;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}